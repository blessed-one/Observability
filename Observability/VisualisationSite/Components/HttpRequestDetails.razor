@using Microsoft.JSInterop
@using Realisation
@using VisualisationSite.Models
@using VisualisationSite.Services
@inject TraceService TraceService
@inject IJSRuntime JSRuntime

<div class="http-request-details">
    <div class="details-header">
        <h3>HTTP Request Details</h3>
        @if (Trace != null)
        {
            <button class="btn btn-sm btn-outline-primary" @onclick="CopyPostmanToken">
                Copy Postman Token
            </button>
        }
    </div>

    @if (Trace != null)
    {
        <div class="details-content">
            <div class="details-section">
                <div class="section-header" @onclick="@(() => ToggleSection("headers"))">
                    <span>Headers</span>
                    <span class="toggle-icon">@(_expandedSections.Contains("headers") ? "\u25BC" : "\u25B6")</span>
                </div>
                @if (_expandedSections.Contains("headers"))
                {
                    <div class="section-content">
                        @foreach (var header in Trace.HttpRequestData)
                        {
                            <div class="header-item @(header.Key.StartsWith("trace-") ? "trace-header" : "")">
                                <span class="header-name">@header.Key:</span>
                                <span class="header-value">@header.Value</span>
                            </div>
                        }
                    </div>
                }
            </div>

            <div class="details-section">
                <div class="section-header" @onclick="@(() => ToggleSection("metrics"))">
                    <span>Metrics</span>
                    <span class="toggle-icon">@(_expandedSections.Contains("metrics") ? "\u25BC" : "\u25B6")</span>
                </div>
                @if (_expandedSections.Contains("metrics"))
                {
                    <div class="section-content">
                        @if (Trace.MetricData != null)
                        {
                            <div class="metric-item">
                                <span class="metric-name">Duration:</span>
                                <span class="metric-value">@Trace.GetDuration()ms</span>
                            </div>
                            <div class="metric-item">
                                <span class="metric-name">Memory:</span>
                                <span class="metric-value">@(Trace.GetMemory() / 1024)KB</span>
                            </div>
                            <div class="metric-item">
                                <span class="metric-name">CPU:</span>
                                <span class="metric-value">@Trace.GetCpu()</span>
                            </div>
                        }
                    </div>
                }
            </div>

            <div class="details-section">
                <div class="section-header" @onclick="@(() => ToggleSection("request"))">
                    <span>Request Details</span>
                    <span class="toggle-icon">@(_expandedSections.Contains("request") ? "\u25BC" : "\u25B6")</span>
                </div>
                @if (_expandedSections.Contains("request"))
                {
                    <div class="section-content">
                        <div class="detail-item">
                            <span class="detail-name">Method:</span>
                            <span class="detail-value">@Trace.GetMethod()</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-name">Path:</span>
                            <span class="detail-value">@Trace.GetPath()</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-name">Host:</span>
                            <span class="detail-value">@Trace.GetHost()</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-name">Node ID:</span>
                            <span class="detail-value">@Trace.NodeId</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-name">Timestamp:</span>
                            <span class="detail-value">@Trace.Timestamp.ToString("yyyy-MM-dd HH:mm:ss.fff")</span>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <div class="no-trace-selected">
            Select a trace to view details
        </div>
    }
</div>

@code {
    [Parameter]
    public ObservabilityRecord? Trace { get; set; }

    private readonly HashSet<string> _expandedSections = new() { "headers", "metrics", "request" };

    private void ToggleSection(string section)
    {
        if (_expandedSections.Contains(section))
            _expandedSections.Remove(section);
        else
            _expandedSections.Add(section);
    }

    private async Task CopyPostmanToken()
    {
        if (Trace?.HttpRequestData == null) return;

        var token = Trace.HttpRequestData.GetValueOrDefault("trace-token");
        if (string.IsNullOrEmpty(token.ToString())) return;

        await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", token);
    }
}

<style>
    .http-request-details {
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 1rem;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    .details-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }

    .details-content {
        flex: 1;
        overflow-y: auto;
    }

    .details-section {
        margin-bottom: 1rem;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .section-header {
        padding: 0.5rem;
        background-color: #f8f9fa;
        cursor: pointer;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .section-content {
        padding: 0.5rem;
    }

    .header-item,
    .metric-item,
    .detail-item {
        display: flex;
        margin-bottom: 0.25rem;
    }

    .header-name,
    .metric-name,
    .detail-name {
        font-weight: bold;
        margin-right: 0.5rem;
        min-width: 100px;
    }

    .trace-header {
        color: #1976d2;
    }

    .no-trace-selected {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
        color: #666;
        font-style: italic;
    }
</style> 