@using Realisation
@using VisualisationSite.Models
@using VisualisationSite.Services
@inject TraceService TraceService

<div class="trace-tree">
    <div class="trace-tree-header">
        <h3>Trace Tree</h3>
        <div class="trace-tree-filters">
            <input type="text" @bind="hostFilter" @bind:event="oninput" placeholder="Filter by host..." />
        </div>
    </div>

    <div class="trace-tree-content">
        @if (rootTraces == null)
        {
            <div class="loading">Loading...</div>
        }
        else
        {
            @foreach (var rootTrace in GetFilteredRootTraces())
            {
                <div class="trace-node">
                    <TraceNode Trace="@rootTrace" Level="0" />
                </div>
            }
        }
    </div>
</div>

@code {
    private string hostFilter = "";
    private IEnumerable<ObservabilityRecord>? rootTraces;

    protected override async Task OnInitializedAsync()
    {
        await LoadTraces();
    }

    private async Task LoadTraces()
    {
        Console.WriteLine("TraceTree.razor: try to load root traces");
        rootTraces = await TraceService.GetRootTraces();
        Console.WriteLine("TraceTree.razor: traces loaded");
        StateHasChanged();
    }

    private IEnumerable<ObservabilityRecord> GetFilteredRootTraces()
    {
        if (rootTraces == null) return Enumerable.Empty<ObservabilityRecord>();
        
        if (!string.IsNullOrWhiteSpace(hostFilter))
        {
            return rootTraces.Where(t => t.GetHost().Contains(hostFilter, StringComparison.OrdinalIgnoreCase));
        }
        return rootTraces;
    }
}

<style>
    .trace-tree {
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 1rem;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    .trace-tree-header {
        margin-bottom: 1rem;
    }

    .trace-tree-filters {
        margin-top: 0.5rem;
    }

    .trace-tree-content {
        flex: 1;
        overflow-y: auto;
    }

    .trace-node {
        margin-left: 1rem;
    }

    .loading {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
        color: #666;
        font-style: italic;
    }
</style> 